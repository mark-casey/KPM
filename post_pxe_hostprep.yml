---

- name: Install and configure software on target hosts
  hosts: all
  vars:
    - ext_vlans:
        - 251
        - 252
        - 253
        - 254

  tasks:
    - name: Install some dependencies
      command: >
             apt-get -qy update && apt-get -qy install curl git vim vlan

    - name: Remove old included pip
      command: >
             apt-get -qy purge python-pip

    - name: Install new shiny pip
      shell: >
             curl https://bootstrap.pypa.io/get-pip.py | sudo python

    - name: Install python-docker via pip
      command: >
             pip install -U docker-py

    - name: Checking if Docker is installed
      command: which docker
      changed_when: false
      register: result

    - name: Install docker
      shell: >
             curl -sSL https://get.docker.io | bash
      when: result.rc != 0

      # This and next task assume CentOS or Ubuntu Wily or later... because systemd!
    - name: Create docker.service.d
      file: path='/lib/systemd/system/docker.service.d' state=directory

    - name: Create /lib/systemd/system/docker.service.d/kolla.conf
      copy:
        content: "[Service]\nExecStart=\nExecStart=/usr/bin/docker daemon -H fd:// --insecure-registry {{ lookup('env','DPLYR_MGMTNET_IP') }}:5000\nMountFlags=\nMountFlags=shared\n"
        dest: "/lib/systemd/system/docker.service.d/kolla.conf"
      register: file_create

    - name: Restart docker
      shell: systemctl daemon-reload && service docker restart
      when: file_create|changed

      #
      # Next several tasks are for setting up vlan interfaces to pass them along as regular interfaces to Neutron
      # until they can be moved into ml2_conf.ini so that Neutron can handle them
      #

      # Not sure if Neutron depends on this module when handling vlans in the ml2_conf.ini, but I'm not handling them there - YET
    - name: Checking if '8021q' in /etc/modules
      command: cat /etc/modules
      changed_when: false
      register: result

      # See comment on previous task
    - name: Enable 8021q kernel module for vlan
      shell: modprobe 8021q && echo '8021q' >> /etc/modules
      when: result.stdout.find('8021q') == -1

      # This and next task go away when moving vlans to ml2_config.ini
    - name: Checking if vlans present for external networks
      command: ip a
      register: result
      changed_when: false

    - name: Add any missing external network vlans
      command: vconfig add eth1 {{ item }}
      with_items: ext_vlans
      when: result.stdout.find('eth1.{{ item }}') == -1

      #
      # End vlan hackage
      #



      #
      # This section sees if Kolla image building has happened previously then:
      #  - If no, it distributes the build to all nodes.
      #  - If yes, it does nothing (I believe re-running build can get into questions of --no-cache so we avoid for now!).
      #  - There is no support with this method of only building specific images... all are attempted!
      #  - build.py does a pull first when considering building parent images and child images will build parent
      #    images as a dependency so it doesn't matter which node gets which images to build. Later this should be
      #    changed to make two passes. One to split up all parent builds, and another run for child builds
      #

    - name: List images
      shell: build.py --options --options INVALID_REGEX | one-liner to get just images
      register: result
      
    - name: Set a fact for how many images there are
      set_fact: kolla_image_count=result|length()

    - name: Set a fact for how many image subsets we should have
      set_fact: my_build_py_images=kolla_image_count / {{ all|length }}

    - name: Register image list to build per host
      shell: build.py --options --options INVALID_REGEX | one-liner to get just image list | cut -d, -f $USE_NUMBERS_ABOVE_TO__SPLIT_INTO_RANGES
      register: result

      # Tasks below skip if this is over 25
    - name: Count how many images we have to see if Kolla image build has happened in the past
      shell: docker images | grep kollaglue | wc -l
      register: result

    - name: If this is the first node begin Kolla image build immediately (to get parent images built)
      command: build.py --options --options {{ result.stdout }} 
      async: 600  # 10 minutes to build images
      poll: 5  # see if completed every 5 seconds
      when: inventory_hostname == all[0] and result.stdout < 25

    - name: If this is not the first node wait 30 seconds (to wait for parent images to build), then begin Kolla image build
      command: /bin/sleep 30 && build.py --options --options {{ result.stdout }} 
      async: 600
      poll: 5
      when: inventory_hostname != all[0] result.stdout < 25

